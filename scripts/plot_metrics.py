# -*- coding: utf-8 -*-
"""evaluate.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mvzD8OwcJE7XHKbOxXBdGMOHi7m8tNLG
"""

import matplotlib.pyplot as plt
import numpy as np
import math
from pathlib import Path

path = Path("logs")
FILENAME = path / "logfile2.txt"
print(f"File path: {FILENAME}")

with open(FILENAME) as f:
  lines = f.readlines()

# Simulation params
ROBOTS_NUM = 12
ROBOTS_RANGE = 30.0
MAX_AREA = ROBOTS_NUM * math.pi * math.pow(0.5*ROBOTS_RANGE,2)
STEP = 0.5

# initilize performance metrics
effect = np.zeros(len(lines))
eps = np.zeros_like(effect)
optim = np.zeros_like(effect)
x_range = np.arange(0, len(lines)*STEP, STEP)

for i in np.arange(len(lines)):
  l = lines[i].replace('\n', '')
  t = tuple(map(float, l.split(' ')))
  effect[i] = t[0]
  eps[i] = t[1]
  optim[i] = t[2]

# plot data
fig, ax1 = plt.subplots()

c1 = "tab:blue"
ax1.set_ylabel('Optimality', color=c1)
ax1.plot(x_range, optim, color=c1)
ax1.tick_params(axis='y', labelcolor=c1)

c2 = "tab:orange"
ax2 = ax1.twinx()               # 2nd axis sharing same x axis
ax2.set_ylabel('Efficiency', color=c2)
ax2.plot(x_range, eps/MAX_AREA, color=c2)
ax2.tick_params(axis='y', labelcolor=c2)

c3 = "tab:green"
ax3 = ax1.twinx()
ax3.set_ylabel('Effectiveness', color=c3)
ax3.plot(x_range, effect, color=c3)
ax3.tick_params(axis='y', labelcolor=c3)
plt.show()

eps[len(eps)-1]/MAX_AREA